name: Helper - Build and push image

on:
  workflow_call:
    inputs:
      image-artifact-name:
        required: true
        type: string
      image-artifact-filename:
        required: true
        type: string
      build-target:
        required: true
        type: string
      image-identifier:
        required: true
        type: string
      display-name:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
    outputs:
      image-tag:
        description: "The tag of the image that's been built"
        value: ${{ jobs.build-push-image.outputs.image-tag }}

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    name: ${{ inputs.display-name }}
    environment: ${{ inputs.environment }}
    outputs:
      image-tag: ${{ steps.set-image-tag.outputs.image-tag }}

    # Needed by azure cli to be able to login
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: "Az CLI login"
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Check if image already exists
        id: image-exists-check
        run: echo "image_exists=$(az acr repository show-tags --name ${{ vars.ACR_NAME }} --repository ${{ inputs.image-identifier }} 2>/dev/null | jq 'any(. == "${{ github.sha }}")' | echo "false")" >> $GITHUB_OUTPUT

      - name: Set image tag
        id: set-image-tag
        run: echo "image-tag=${{ vars.ACR_ENDPOINT }}/${{ inputs.image-identifier }}:${{ github.sha }}" >> "$GITHUB_OUTPUT"

      - name: Build container and tag it
        if: ${{ steps.image-exists-check.outputs.image_exists == 'false' }}
        run: docker build -f './src/Dockerfile' --target ${{ inputs.build-target }} --tag ${{ steps.set-image-tag.outputs.image-tag }} .

      - name: Azure container registry login
        if: ${{ steps.image-exists-check.outputs.image_exists == 'false' }}
        run: az acr login --name ${{ vars.ACR_ENDPOINT }}

      - name: Push image
        if: ${{ steps.image-exists-check.outputs.image_exists == 'false' }}
        run: docker push ${{ steps.set-image-tag.outputs.image-tag }}
